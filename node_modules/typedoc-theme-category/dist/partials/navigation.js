"use strict";
/* eslint-disable eslint-comments/disable-enable-pair */
/* eslint-disable array-callback-return */
/* eslint-disable arrow-body-style */
/* eslint-disable unicorn/no-array-for-each */
/* eslint-disable prettier/prettier */
/* eslint-disable no-plusplus */
/* eslint-disable unicorn/no-for-loop */
/* eslint-disable react/jsx-props-no-spreading */
/* eslint-disable react/destructuring-assignment */
/* eslint-disable react/function-component-definition */
Object.defineProperty(exports, "__esModule", { value: true });
exports.navigation = void 0;
const typedoc_1 = require("typedoc");
const secondaryNavigation = (context, props) => {
    var _a;
    const children = props.model instanceof typedoc_1.ContainerReflection ? props.model.children || [] : [];
    const obj = {};
    for (let i = 0; i < children.length; i++) {
        const temp = children[i];
        if (temp) {
            const str = temp.kindString;
            if (!obj[str]) {
                obj[str] = [];
            }
            (_a = obj[str]) === null || _a === void 0 ? void 0 : _a.push(temp);
        }
    }
    const template = [];
    Object.keys(obj).forEach((child) => {
        const content = obj[child] || [];
        const x = (typedoc_1.JSX.createElement("li", null,
            typedoc_1.JSX.createElement("span", { class: 'caret' }, child),
            typedoc_1.JSX.createElement("ul", { class: 'theme-category-nested' }, content.map((subItem) => {
                return (typedoc_1.JSX.createElement("li", { class: subItem.cssClasses },
                    typedoc_1.JSX.createElement("a", { class: 'tsd-kind-icon', href: context.urlTo(subItem) }, subItem.name)));
            }))));
        template.push(x);
    });
    const pageNavigation = (typedoc_1.JSX.createElement("ul", { id: "myUL" }, template));
    return (typedoc_1.JSX.createElement("nav", { class: "tsd-navigation secondary menu-sticky" }, pageNavigation));
};
/**
 *Definition.
 */
const navigation = (context, props) => {
    return (typedoc_1.JSX.createElement("div", null, secondaryNavigation(context, props)));
};
exports.navigation = navigation;
